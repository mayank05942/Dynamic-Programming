Prob: https://leetcode.com/problems/minimum-path-sum/

Explanation: Simply follow Top Down appraoch and fill 1st row and 1st col subproblems and use them to fill rest of the table

________________________________________________________________________________________________________________________
Code:

class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        
        dp = []
        for _ in range(len(grid)):
            dp.append([-1]*(len(grid[0])))
            
        add = 0   
        for j in range(len(grid[0])):
            add += grid[0][j]
            dp[0][j] = add
        
        add = 0
        for i in range(len(grid)):
            add += grid[i][0]
            dp[i][0] = add
        
        for i in range(1,len(grid)):
            for j in range(1,len(grid[0])):
                dp[i][j] = min(grid[i][j]+dp[i][j-1],grid[i][j]+dp[i-1][j])
                
        return dp[-1][-1]
        
        
            
     
        
        
